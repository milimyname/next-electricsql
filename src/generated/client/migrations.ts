export default [
  {
    "statements": [
      "CREATE TABLE \"Todo\" (\n  \"id\" TEXT NOT NULL,\n  \"text\" TEXT NOT NULL,\n  \"done\" INTEGER NOT NULL,\n  \"userId\" TEXT NOT NULL,\n  \"insertedAt\" TEXT(3) NOT NULL,\n  \"updatedAt\" TEXT(3) NOT NULL,\n  CONSTRAINT \"Todo_userId_fkey\" FOREIGN KEY (\"userId\") REFERENCES \"User\" (\"username\") ON DELETE CASCADE ON UPDATE CASCADE,\n  CONSTRAINT \"Todo_pkey\" PRIMARY KEY (\"id\")\n) WITHOUT ROWID;\n",
      "CREATE TABLE \"User\" (\n  \"username\" TEXT NOT NULL,\n  \"insertedAt\" TEXT(3) NOT NULL,\n  \"updatedAt\" TEXT(3) NOT NULL,\n  CONSTRAINT \"User_pkey\" PRIMARY KEY (\"username\")\n) WITHOUT ROWID;\n",
      "INSERT OR IGNORE INTO _electric_trigger_settings(tablename,flag) VALUES ('main.Todo', 1);",
      "DROP TRIGGER IF EXISTS update_ensure_main_Todo_primarykey;",
      "CREATE TRIGGER update_ensure_main_Todo_primarykey\n  BEFORE UPDATE ON \"main\".\"Todo\"\nBEGIN\n  SELECT\n    CASE\n      WHEN old.\"id\" != new.\"id\" THEN\n      \t\tRAISE (ABORT, 'cannot change the value of column id as it belongs to the primary key')\n    END;\nEND;",
      "DROP TRIGGER IF EXISTS insert_main_Todo_into_oplog;",
      "CREATE TRIGGER insert_main_Todo_into_oplog\n   AFTER INSERT ON \"main\".\"Todo\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.Todo')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'Todo', 'INSERT', json_object('id', new.\"id\"), json_object('done', new.\"done\", 'id', new.\"id\", 'insertedAt', new.\"insertedAt\", 'text', new.\"text\", 'updatedAt', new.\"updatedAt\", 'userId', new.\"userId\"), NULL, NULL);\nEND;",
      "DROP TRIGGER IF EXISTS update_main_Todo_into_oplog;",
      "CREATE TRIGGER update_main_Todo_into_oplog\n   AFTER UPDATE ON \"main\".\"Todo\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.Todo')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'Todo', 'UPDATE', json_object('id', new.\"id\"), json_object('done', new.\"done\", 'id', new.\"id\", 'insertedAt', new.\"insertedAt\", 'text', new.\"text\", 'updatedAt', new.\"updatedAt\", 'userId', new.\"userId\"), json_object('done', old.\"done\", 'id', old.\"id\", 'insertedAt', old.\"insertedAt\", 'text', old.\"text\", 'updatedAt', old.\"updatedAt\", 'userId', old.\"userId\"), NULL);\nEND;",
      "DROP TRIGGER IF EXISTS delete_main_Todo_into_oplog;",
      "CREATE TRIGGER delete_main_Todo_into_oplog\n   AFTER DELETE ON \"main\".\"Todo\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.Todo')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'Todo', 'DELETE', json_object('id', old.\"id\"), NULL, json_object('done', old.\"done\", 'id', old.\"id\", 'insertedAt', old.\"insertedAt\", 'text', old.\"text\", 'updatedAt', old.\"updatedAt\", 'userId', old.\"userId\"), NULL);\nEND;",
      "DROP TRIGGER IF EXISTS compensation_insert_main_Todo_userId_into_oplog;",
      "CREATE TRIGGER compensation_insert_main_Todo_userId_into_oplog\n  AFTER INSERT ON \"main\".\"Todo\"\n  WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.User') AND\n       1 == (SELECT value from _electric_meta WHERE key == 'compensations')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  SELECT 'main', 'User', 'COMPENSATION', json_object('username', \"username\"), json_object('username', \"username\"), NULL, NULL\n  FROM \"main\".\"User\" WHERE \"username\" = new.\"userId\";\nEND;",
      "DROP TRIGGER IF EXISTS compensation_update_main_Todo_userId_into_oplog;",
      "CREATE TRIGGER compensation_update_main_Todo_userId_into_oplog\n   AFTER UPDATE ON \"main\".\"Todo\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.User') AND\n        1 == (SELECT value from _electric_meta WHERE key == 'compensations')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  SELECT 'main', 'User', 'COMPENSATION', json_object('username', \"username\"), json_object('username', \"username\"), NULL, NULL\n  FROM \"main\".\"User\" WHERE \"username\" = new.\"userId\";\nEND;",
      "INSERT OR IGNORE INTO _electric_trigger_settings(tablename,flag) VALUES ('main.User', 1);",
      "DROP TRIGGER IF EXISTS update_ensure_main_User_primarykey;",
      "CREATE TRIGGER update_ensure_main_User_primarykey\n  BEFORE UPDATE ON \"main\".\"User\"\nBEGIN\n  SELECT\n    CASE\n      WHEN old.\"username\" != new.\"username\" THEN\n      \t\tRAISE (ABORT, 'cannot change the value of column username as it belongs to the primary key')\n    END;\nEND;",
      "DROP TRIGGER IF EXISTS insert_main_User_into_oplog;",
      "CREATE TRIGGER insert_main_User_into_oplog\n   AFTER INSERT ON \"main\".\"User\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.User')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'User', 'INSERT', json_object('username', new.\"username\"), json_object('insertedAt', new.\"insertedAt\", 'updatedAt', new.\"updatedAt\", 'username', new.\"username\"), NULL, NULL);\nEND;",
      "DROP TRIGGER IF EXISTS update_main_User_into_oplog;",
      "CREATE TRIGGER update_main_User_into_oplog\n   AFTER UPDATE ON \"main\".\"User\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.User')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'User', 'UPDATE', json_object('username', new.\"username\"), json_object('insertedAt', new.\"insertedAt\", 'updatedAt', new.\"updatedAt\", 'username', new.\"username\"), json_object('insertedAt', old.\"insertedAt\", 'updatedAt', old.\"updatedAt\", 'username', old.\"username\"), NULL);\nEND;",
      "DROP TRIGGER IF EXISTS delete_main_User_into_oplog;",
      "CREATE TRIGGER delete_main_User_into_oplog\n   AFTER DELETE ON \"main\".\"User\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.User')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'User', 'DELETE', json_object('username', old.\"username\"), NULL, json_object('insertedAt', old.\"insertedAt\", 'updatedAt', old.\"updatedAt\", 'username', old.\"username\"), NULL);\nEND;"
    ],
    "version": "20240414013640"
  }
]